[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.example:merged-project[0;1m >---------------------[m
[[1;34mINFO[m] [1mBuilding merged-project 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ war ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mmerged-project[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 5 resources from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:compile[m [1m(default-compile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] skip non existing resourceDirectory /home/bxs/AIMSspringboot-react/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:testCompile[m [1m(default-testCompile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] No sources to compile
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mmerged-project[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-06-26T19:22:34.504+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 56804 (/home/bxs/AIMSspringboot-react/target/classes started by bxs in /home/bxs/AIMSspringboot-react)
2025-06-26T19:22:34.506+07:00 DEBUG 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-26T19:22:34.507+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-06-26T19:22:34.551+07:00  INFO 56804 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-26T19:22:34.552+07:00  INFO 56804 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-26T19:22:35.289+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-26T19:22:35.289+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-26T19:22:35.412+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112 ms. Found 13 JPA repository interfaces.
2025-06-26T19:22:36.122+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-26T19:22:36.134+07:00  INFO 56804 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-26T19:22:36.135+07:00  INFO 56804 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-26T19:22:36.319+07:00  INFO 56804 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-06-26T19:22:36.324+07:00  INFO 56804 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-26T19:22:36.325+07:00  INFO 56804 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1772 ms
2025-06-26T19:22:36.471+07:00  INFO 56804 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-26T19:22:36.518+07:00  INFO 56804 --- [demo] [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-26T19:22:36.553+07:00  INFO 56804 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-26T19:22:36.785+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-26T19:22:36.831+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-26T19:22:36.996+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@ab1f08
2025-06-26T19:22:36.998+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-26T19:22:37.038+07:00  INFO 56804 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-26T19:22:38.057+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-06-26T19:22:38.064+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:22:38.065+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:22:38.067+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:22:38.068+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:22:38.069+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:22:38.194+07:00  INFO 56804 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-26T19:22:38.228+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table daily_operation_tracker 
       drop constraint UKenk1xmd0sbhl6des3w1npxred
Hibernate: 
    alter table daily_operation_tracker 
       drop constraint UKenk1xmd0sbhl6des3w1npxred
2025-06-26T19:22:38.230+07:00  INFO 56804 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-26T19:22:38.424+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-26T19:22:41.071+07:00  WARN 56804 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-26T19:22:41.090+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-26T19:22:41.163+07:00 DEBUG 56804 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 77 mappings in 'requestMappingHandlerMapping'
2025-06-26T19:22:41.223+07:00 DEBUG 56804 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-26T19:22:41.248+07:00 DEBUG 56804 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-26T19:22:41.283+07:00 DEBUG 56804 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-26T19:22:41.354+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-06-26T19:22:41.405+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-26T19:22:41.458+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-26T19:22:41.464+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 7.349 seconds (process running for 7.783)
2025-06-26T19:22:42.001+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-26T19:22:42.001+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-26T19:22:42.001+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-26T19:22:42.001+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-26T19:22:42.001+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-26T19:22:42.002+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3780acfb
2025-06-26T19:22:42.003+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@3de2178e
2025-06-26T19:22:42.003+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-26T19:22:42.003+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-06-26T19:22:42.010+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:22:42.015+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:22:42.045+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:22:42.049+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:22:42.093+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:22:42.153+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-26T19:22:42.162+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:22:42.184+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:22:55.986+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/payment/vnpay/return?vnp_Amount=5175900&vnp_BankCode=NCB&vnp_BankTranNo=VNP15040428&vnp_CardType=ATM&vnp_OrderInfo=Thanh+toan+don+hang%3A70805421&vnp_PayDate=20250626191744&vnp_ResponseCode=00&vnp_TmnCode=YFW5M6GN&vnp_TransactionNo=15040428&vnp_TransactionStatus=00&vnp_TxnRef=70805421&vnp_SecureHash=6ecbf8c8e415e0a47eede4b8cf010ea0607128237601f5798864054ffb1c96458dc4958e573749dada8327ae9fc10d1d20a2e59b3b008a571848596eabcee981", parameters={masked}
2025-06-26T19:22:55.990+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.vnpay.VNPayController#returnPage(Map, HttpServletRequest, Model)
2025-06-26T19:22:56.032+07:00  INFO 56804 --- [demo] [nio-8080-exec-2] c.i.e.controller.vnpay.VNPayController   : Payment return - TxnId: 70805421, Amount: 5175900, Status: 00, ResponseCode: 00
2025-06-26T19:22:56.044+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.w.s.v.ContentNegotiatingViewResolver : Selected 'text/html' given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8]
2025-06-26T19:22:56.045+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.view.JstlView            : View name [vnpay_return], model {paymentDateStr=26/06/2025 19:17:44, payment=com.itss.ecommerce.dto.vnpay.PaymentReturnResponse@4b5f338b, org.springframework.validation.BindingResult.payment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-26T19:22:56.048+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.view.JstlView            : Forwarding to [/WEB-INF/jsp/vnpay_return.jsp]
2025-06-26T19:22:56.766+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:27:03.907+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : GET "/api/payment/vnpay/return?vnp_Amount=5175900&vnp_BankCode=NCB&vnp_BankTranNo=VNP15040428&vnp_CardType=ATM&vnp_OrderInfo=Thanh+toan+don+hang%3A70805421&vnp_PayDate=20250626191744&vnp_ResponseCode=00&vnp_TmnCode=YFW5M6GN&vnp_TransactionNo=15040428&vnp_TransactionStatus=00&vnp_TxnRef=70805421&vnp_SecureHash=6ecbf8c8e415e0a47eede4b8cf010ea0607128237601f5798864054ffb1c96458dc4958e573749dada8327ae9fc10d1d20a2e59b3b008a571848596eabcee981", parameters={masked}
2025-06-26T19:27:03.907+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.vnpay.VNPayController#returnPage(Map, HttpServletRequest, Model)
2025-06-26T19:27:03.910+07:00  INFO 56804 --- [demo] [nio-8080-exec-4] c.i.e.controller.vnpay.VNPayController   : Payment return - TxnId: 70805421, Amount: 5175900, Status: 00, ResponseCode: 00
2025-06-26T19:27:03.910+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] o.s.w.s.v.ContentNegotiatingViewResolver : Selected 'text/html' given [text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8]
2025-06-26T19:27:03.911+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] o.s.web.servlet.view.JstlView            : View name [vnpay_return], model {paymentDateStr=26/06/2025 19:17:44, payment=com.itss.ecommerce.dto.vnpay.PaymentReturnResponse@540fe531, org.springframework.validation.BindingResult.payment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2025-06-26T19:27:03.911+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] o.s.web.servlet.view.JstlView            : Forwarding to [/WEB-INF/jsp/vnpay_return.jsp]
2025-06-26T19:27:03.993+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:27:06.158+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:27:06.159+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:27:06.172+07:00  INFO 56804 --- [demo] [nio-8080-exec-5] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:27:06.173+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:27:06.176+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:27:06.182+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:27:06.182+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:27:06.186+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:28:16.528+07:00  INFO 56804 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-06-26T19:28:16.538+07:00  INFO 56804 --- [demo] [       Thread-5] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-06-26T19:28:16.546+07:00  INFO 56804 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-06-26T19:28:16.555+07:00  INFO 56804 --- [demo] [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-26T19:28:16.559+07:00  INFO 56804 --- [demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-26T19:28:16.562+07:00  INFO 56804 --- [demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-06-26T19:28:16.759+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 56804 (/home/bxs/AIMSspringboot-react/target/classes started by bxs in /home/bxs/AIMSspringboot-react)
2025-06-26T19:28:16.760+07:00 DEBUG 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-26T19:28:16.761+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-06-26T19:28:17.040+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-26T19:28:17.041+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-26T19:28:17.081+07:00  INFO 56804 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38 ms. Found 13 JPA repository interfaces.
2025-06-26T19:28:17.398+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-26T19:28:17.401+07:00  INFO 56804 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-26T19:28:17.401+07:00  INFO 56804 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-26T19:28:17.512+07:00  INFO 56804 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-06-26T19:28:17.522+07:00  INFO 56804 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-26T19:28:17.523+07:00  INFO 56804 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 758 ms
2025-06-26T19:28:17.599+07:00  INFO 56804 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-26T19:28:17.604+07:00  INFO 56804 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-26T19:28:17.634+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-26T19:28:17.639+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-06-26T19:28:17.640+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.sqlite.jdbc4.JDBC4Connection@be1ca55
2025-06-26T19:28:17.641+07:00  INFO 56804 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-06-26T19:28:17.642+07:00  INFO 56804 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-26T19:28:18.092+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-06-26T19:28:18.096+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:28:18.098+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:28:18.099+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:28:18.101+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, product_value integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:28:18.102+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, product_value integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-06-26T19:28:18.134+07:00  INFO 56804 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-26T19:28:18.146+07:00 DEBUG 56804 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table daily_operation_tracker 
       drop constraint UKenk1xmd0sbhl6des3w1npxred
Hibernate: 
    alter table daily_operation_tracker 
       drop constraint UKenk1xmd0sbhl6des3w1npxred
2025-06-26T19:28:18.147+07:00  INFO 56804 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-26T19:28:18.739+07:00  WARN 56804 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-26T19:28:18.753+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-26T19:28:18.801+07:00 DEBUG 56804 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 76 mappings in 'requestMappingHandlerMapping'
2025-06-26T19:28:18.855+07:00 DEBUG 56804 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-06-26T19:28:18.870+07:00 DEBUG 56804 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-26T19:28:18.885+07:00 DEBUG 56804 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-26T19:28:18.920+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-06-26T19:28:18.950+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-26T19:28:18.964+07:00  INFO 56804 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-26T19:28:18.969+07:00  INFO 56804 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 2.274 seconds (process running for 345.287)
2025-06-26T19:28:18.971+07:00  INFO 56804 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-06-26T19:29:39.350+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-26T19:29:39.350+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-26T19:29:39.351+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-06-26T19:29:39.351+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-06-26T19:29:39.351+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-06-26T19:29:39.352+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3a61178b
2025-06-26T19:29:39.352+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@268a679c
2025-06-26T19:29:39.352+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-26T19:29:39.352+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-06-26T19:29:39.353+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:29:39.353+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:29:39.366+07:00  INFO 56804 --- [demo] [nio-8080-exec-1] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:29:39.368+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:29:39.372+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:29:39.385+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:29:39.392+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:29:39.398+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:30:22.257+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : OPTIONS "/api/auth/login", parameters={}
2025-06-26T19:30:22.257+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.AuthController#login(Map, HttpSession)
2025-06-26T19:30:22.259+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:30:22.278+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/login", parameters={}
2025-06-26T19:30:22.279+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.AuthController#login(Map, HttpSession)
2025-06-26T19:30:22.302+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [{email=admin@itss.com, password=hashedpassword123}]
2025-06-26T19:30:22.306+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] com.itss.ecommerce.service.UserService   : Authenticating user: admin@itss.com
2025-06-26T19:30:22.322+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        u1_0.role,
        u1_0.salary 
    from
        user u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        u1_0.role,
        u1_0.salary 
    from
        user u1_0 
    where
        u1_0.email=?
2025-06-26T19:30:22.325+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] c.i.ecommerce.service.AuditLogService    : Logging action: User Login by user: 1 with type: LOGIN
2025-06-26T19:30:22.345+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-06-26T19:30:22.350+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-06-26T19:30:22.357+07:00  INFO 56804 --- [demo] [nio-8080-exec-3] com.itss.ecommerce.service.UserService   : User authenticated successfully: admin@itss.com
2025-06-26T19:30:22.360+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-26T19:30:22.364+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Login successful, data=UserDTO(userId=1, name=Admin User, email=ad (truncated)...]
2025-06-26T19:30:22.371+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:32:46.163+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:32:46.164+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:32:46.165+07:00  INFO 56804 --- [demo] [nio-8080-exec-5] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:32:46.165+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:32:46.168+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:32:46.174+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:32:46.175+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:32:46.176+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:33:06.105+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/orders", parameters={}
2025-06-26T19:33:06.105+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.OrderController#getAllOrders()
2025-06-26T19:33:06.109+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:33:06.109+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : GET "/api/products/low-stock?threshold=10", parameters={masked}
2025-06-26T19:33:06.109+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:33:06.109+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getLowStockProducts(int)
2025-06-26T19:33:06.111+07:00  INFO 56804 --- [demo] [nio-8080-exec-8] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:33:06.111+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:33:06.113+07:00  INFO 56804 --- [demo] [nio-8080-exec-6] c.i.e.controller.OrderController         : GET /api/orders - Fetching all orders
2025-06-26T19:33:06.114+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:33:06.114+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] c.itss.ecommerce.service.OrderService    : Fetching all orders
2025-06-26T19:33:06.117+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oil1_0.order_id,
        oil1_0.created_at,
        oil1_0.delivery_id,
        oil1_0.status,
        oil1_0.total_after_vat,
        oil1_0.total_before_vat,
        oil1_0.updated_at,
        oil1_0.vat_percentage 
    from
        order_item_list oil1_0 
    order by
        oil1_0.created_at desc
Hibernate: 
    select
        oil1_0.order_id,
        oil1_0.created_at,
        oil1_0.delivery_id,
        oil1_0.status,
        oil1_0.total_after_vat,
        oil1_0.total_before_vat,
        oil1_0.updated_at,
        oil1_0.vat_percentage 
    from
        order_item_list oil1_0 
    order by
        oil1_0.created_at desc
2025-06-26T19:33:06.118+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:33:06.118+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:33:06.125+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:33:06.129+07:00  INFO 56804 --- [demo] [nio-8080-exec-7] c.i.e.controller.ProductController       : GET /api/products/low-stock - Fetching products with stock below 10
2025-06-26T19:33:06.131+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] c.itss.ecommerce.service.ProductService  : Fetching products with stock below: 10
2025-06-26T19:33:06.138+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.quantity<?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.quantity<?
2025-06-26T19:33:06.140+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:33:06.141+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Found 1 products with low stock, data=[ProductDTO(productId=2, tit (truncated)...]
2025-06-26T19:33:06.142+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:33:06.150+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.160+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.161+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.164+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.165+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.166+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.167+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.168+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.169+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.170+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.171+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.172+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.173+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.174+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.175+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.176+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.177+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.178+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.179+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.181+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.183+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.185+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.186+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.187+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.188+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.189+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.190+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.191+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.192+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status,
        i1_0.transaction_id 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-06-26T19:33:06.198+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.201+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.205+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-06-26T19:33:06.206+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.207+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.208+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-06-26T19:33:06.209+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.210+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.210+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.211+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.213+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.214+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.215+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.216+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.217+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-06-26T19:33:06.218+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.218+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.219+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.220+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.221+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.222+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.223+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.223+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.224+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.225+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.226+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.227+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.228+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.230+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.231+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.232+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.234+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.234+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.235+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.235+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.237+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.238+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.239+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.240+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.241+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.243+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.244+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.245+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.246+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.247+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.249+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.250+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.251+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.252+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.253+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.254+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.255+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.256+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.256+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-06-26T19:33:06.257+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.258+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.259+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.259+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.260+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.261+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.262+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-06-26T19:33:06.262+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-06-26T19:33:06.264+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:33:06.282+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 29 orders, data=[OrderItemListDTO(orderId=29, totalBefor (truncated)...]
2025-06-26T19:33:06.319+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:33:35.906+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : OPTIONS "/api/auth/logout", parameters={}
2025-06-26T19:33:35.907+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-9] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.AuthController#logout(HttpSession)
2025-06-26T19:33:35.910+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:33:35.916+07:00 DEBUG 56804 --- [demo] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : POST "/api/auth/logout", parameters={}
2025-06-26T19:33:35.917+07:00 DEBUG 56804 --- [demo] [io-8080-exec-10] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.AuthController#logout(HttpSession)
2025-06-26T19:33:35.923+07:00 DEBUG 56804 --- [demo] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-06-26T19:33:35.924+07:00 DEBUG 56804 --- [demo] [io-8080-exec-10] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Logout successful, data=null, errorCode=null, timestamp=2025-06-26 (truncated)...]
2025-06-26T19:33:35.927+07:00 DEBUG 56804 --- [demo] [io-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-06-26T19:34:14.655+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-06-26T19:34:14.655+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-06-26T19:34:14.656+07:00  INFO 56804 --- [demo] [nio-8080-exec-3] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-06-26T19:34:14.657+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] c.itss.ecommerce.service.ProductService  : Fetching all products
2025-06-26T19:34:14.659+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.product_value,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-06-26T19:34:14.663+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-06-26T19:34:14.664+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 9 products, data=[ProductDTO(productId=1, title=The Grea (truncated)...]
2025-06-26T19:34:14.665+07:00 DEBUG 56804 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
