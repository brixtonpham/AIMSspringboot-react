[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.example:merged-project[0;1m >---------------------[m
[[1;34mINFO[m] [1mBuilding merged-project 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ war ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mmerged-project[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 5 resources from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:compile[m [1m(default-compile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/test/resources to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:testCompile[m [1m(default-testCompile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Recompiling the module because of [1mchanged source code[m.
[[1;34mINFO[m] Compiling 10 source files with javac [debug parameters release 21] to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mmerged-project[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T12:36:18.044+07:00  INFO 306257 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 306257 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T12:36:18.046+07:00 DEBUG 306257 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T12:36:18.047+07:00  INFO 306257 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T12:36:18.099+07:00  INFO 306257 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-05T12:36:18.099+07:00  INFO 306257 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-05T12:36:18.607+07:00  INFO 306257 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T12:36:18.607+07:00  INFO 306257 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T12:36:18.679+07:00  INFO 306257 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 64 ms. Found 12 JPA repository interfaces.
2025-07-05T12:36:19.389+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T12:36:19.401+07:00  INFO 306257 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T12:36:19.401+07:00  INFO 306257 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T12:36:19.561+07:00  INFO 306257 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T12:36:19.566+07:00  INFO 306257 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T12:36:19.567+07:00  INFO 306257 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1466 ms
2025-07-05T12:36:19.680+07:00  INFO 306257 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T12:36:19.717+07:00  INFO 306257 --- [demo] [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.11.Final
2025-07-05T12:36:19.745+07:00  INFO 306257 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T12:36:19.977+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T12:36:19.998+07:00  INFO 306257 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-05T12:36:20.121+07:00  INFO 306257 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@329e6a16
2025-07-05T12:36:20.122+07:00  INFO 306257 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-05T12:36:20.151+07:00  INFO 306257 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T12:36:21.030+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T12:36:21.036+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T12:36:21.038+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T12:36:21.039+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T12:36:21.040+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T12:36:21.041+07:00 DEBUG 306257 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T12:36:21.162+07:00  INFO 306257 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T12:36:21.198+07:00  INFO 306257 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T12:36:21.382+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-05T12:36:23.945+07:00  WARN 306257 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T12:36:23.974+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T12:36:24.157+07:00 DEBUG 306257 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 76 mappings in 'requestMappingHandlerMapping'
2025-07-05T12:36:24.263+07:00 DEBUG 306257 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T12:36:24.295+07:00 DEBUG 306257 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T12:36:24.338+07:00 DEBUG 306257 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T12:36:24.411+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T12:36:24.450+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T12:36:24.482+07:00  INFO 306257 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T12:36:24.490+07:00  INFO 306257 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 7.004 seconds (process running for 7.605)
2025-07-05T12:36:25.353+07:00  INFO 306257 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-05T12:36:25.354+07:00  INFO 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-05T12:36:25.354+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-07-05T12:36:25.354+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-07-05T12:36:25.354+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-07-05T12:36:25.355+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@38d37d83
2025-07-05T12:36:25.356+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@7dee7b6d
2025-07-05T12:36:25.356+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-05T12:36:25.356+07:00  INFO 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-07-05T12:36:25.367+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-07-05T12:36:25.385+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-07-05T12:36:25.425+07:00  INFO 306257 --- [demo] [nio-8080-exec-1] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-07-05T12:36:25.429+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] c.i.e.service.admin.ProductService       : Fetching all products with type-specific data
2025-07-05T12:36:25.483+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id
Hibernate: 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id
2025-07-05T12:36:25.513+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.product_id,
        c1_1.barcode,
        c1_1.condition,
        c1_1.created_at,
        c1_1.dimensions,
        c1_1.image_url,
        c1_1.import_date,
        c1_1.introduction,
        c1_1.price,
        c1_1.quantity,
        c1_1.rush_order_supported,
        c1_1.title,
        c1_1.type,
        c1_1.updated_at,
        c1_1.weight,
        c1_0.artists,
        c1_0.genre,
        c1_0.record_label,
        c1_0.release_date,
        c1_0.track_list 
    from
        cd c1_0 
    join
        product c1_1 
            on c1_0.product_id=c1_1.product_id
Hibernate: 
    select
        c1_0.product_id,
        c1_1.barcode,
        c1_1.condition,
        c1_1.created_at,
        c1_1.dimensions,
        c1_1.image_url,
        c1_1.import_date,
        c1_1.introduction,
        c1_1.price,
        c1_1.quantity,
        c1_1.rush_order_supported,
        c1_1.title,
        c1_1.type,
        c1_1.updated_at,
        c1_1.weight,
        c1_0.artists,
        c1_0.genre,
        c1_0.record_label,
        c1_0.release_date,
        c1_0.track_list 
    from
        cd c1_0 
    join
        product c1_1 
            on c1_0.product_id=c1_1.product_id
2025-07-05T12:36:25.516+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.product_id,
        d1_1.barcode,
        d1_1.condition,
        d1_1.created_at,
        d1_1.dimensions,
        d1_1.image_url,
        d1_1.import_date,
        d1_1.introduction,
        d1_1.price,
        d1_1.quantity,
        d1_1.rush_order_supported,
        d1_1.title,
        d1_1.type,
        d1_1.updated_at,
        d1_1.weight,
        d1_0.directors,
        d1_0.duration_minutes,
        d1_0.dvd_type,
        d1_0.genre,
        d1_0.rating,
        d1_0.release_date,
        d1_0.studio 
    from
        dvd d1_0 
    join
        product d1_1 
            on d1_0.product_id=d1_1.product_id
Hibernate: 
    select
        d1_0.product_id,
        d1_1.barcode,
        d1_1.condition,
        d1_1.created_at,
        d1_1.dimensions,
        d1_1.image_url,
        d1_1.import_date,
        d1_1.introduction,
        d1_1.price,
        d1_1.quantity,
        d1_1.rush_order_supported,
        d1_1.title,
        d1_1.type,
        d1_1.updated_at,
        d1_1.weight,
        d1_0.directors,
        d1_0.duration_minutes,
        d1_0.dvd_type,
        d1_0.genre,
        d1_0.rating,
        d1_0.release_date,
        d1_0.studio 
    from
        dvd d1_0 
    join
        product d1_1 
            on d1_0.product_id=d1_1.product_id
2025-07-05T12:36:25.521+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        l1_0.product_id,
        l1_1.barcode,
        l1_1.condition,
        l1_1.created_at,
        l1_1.dimensions,
        l1_1.image_url,
        l1_1.import_date,
        l1_1.introduction,
        l1_1.price,
        l1_1.quantity,
        l1_1.rush_order_supported,
        l1_1.title,
        l1_1.type,
        l1_1.updated_at,
        l1_1.weight,
        l1_0.artist,
        l1_0.music_type,
        l1_0.record_label,
        l1_0.release_date,
        l1_0.rpm,
        l1_0.size_inches,
        l1_0.sleeve_condition,
        l1_0.tracklist,
        l1_0.vinyl_condition 
    from
        lp l1_0 
    join
        product l1_1 
            on l1_0.product_id=l1_1.product_id
Hibernate: 
    select
        l1_0.product_id,
        l1_1.barcode,
        l1_1.condition,
        l1_1.created_at,
        l1_1.dimensions,
        l1_1.image_url,
        l1_1.import_date,
        l1_1.introduction,
        l1_1.price,
        l1_1.quantity,
        l1_1.rush_order_supported,
        l1_1.title,
        l1_1.type,
        l1_1.updated_at,
        l1_1.weight,
        l1_0.artist,
        l1_0.music_type,
        l1_0.record_label,
        l1_0.release_date,
        l1_0.rpm,
        l1_0.size_inches,
        l1_0.sleeve_condition,
        l1_0.tracklist,
        l1_0.vinyl_condition 
    from
        lp l1_0 
    join
        product l1_1 
            on l1_0.product_id=l1_1.product_id
2025-07-05T12:36:25.523+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] c.i.e.service.admin.ProductService       : Fetched 11 products with complete data
2025-07-05T12:36:25.560+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-05T12:36:25.571+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 11 products, data=[BookDTO(bookId=1, genre=Documentary,  (truncated)...]
2025-07-05T12:36:25.612+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T12:36:30.415+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-07-05T12:36:30.415+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-07-05T12:36:30.434+07:00  INFO 306257 --- [demo] [nio-8080-exec-2] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-07-05T12:36:30.434+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] c.i.e.service.admin.ProductService       : Fetching all products with type-specific data
2025-07-05T12:36:30.436+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id
Hibernate: 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id
2025-07-05T12:36:30.439+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.product_id,
        c1_1.barcode,
        c1_1.condition,
        c1_1.created_at,
        c1_1.dimensions,
        c1_1.image_url,
        c1_1.import_date,
        c1_1.introduction,
        c1_1.price,
        c1_1.quantity,
        c1_1.rush_order_supported,
        c1_1.title,
        c1_1.type,
        c1_1.updated_at,
        c1_1.weight,
        c1_0.artists,
        c1_0.genre,
        c1_0.record_label,
        c1_0.release_date,
        c1_0.track_list 
    from
        cd c1_0 
    join
        product c1_1 
            on c1_0.product_id=c1_1.product_id
Hibernate: 
    select
        c1_0.product_id,
        c1_1.barcode,
        c1_1.condition,
        c1_1.created_at,
        c1_1.dimensions,
        c1_1.image_url,
        c1_1.import_date,
        c1_1.introduction,
        c1_1.price,
        c1_1.quantity,
        c1_1.rush_order_supported,
        c1_1.title,
        c1_1.type,
        c1_1.updated_at,
        c1_1.weight,
        c1_0.artists,
        c1_0.genre,
        c1_0.record_label,
        c1_0.release_date,
        c1_0.track_list 
    from
        cd c1_0 
    join
        product c1_1 
            on c1_0.product_id=c1_1.product_id
2025-07-05T12:36:30.444+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        d1_0.product_id,
        d1_1.barcode,
        d1_1.condition,
        d1_1.created_at,
        d1_1.dimensions,
        d1_1.image_url,
        d1_1.import_date,
        d1_1.introduction,
        d1_1.price,
        d1_1.quantity,
        d1_1.rush_order_supported,
        d1_1.title,
        d1_1.type,
        d1_1.updated_at,
        d1_1.weight,
        d1_0.directors,
        d1_0.duration_minutes,
        d1_0.dvd_type,
        d1_0.genre,
        d1_0.rating,
        d1_0.release_date,
        d1_0.studio 
    from
        dvd d1_0 
    join
        product d1_1 
            on d1_0.product_id=d1_1.product_id
Hibernate: 
    select
        d1_0.product_id,
        d1_1.barcode,
        d1_1.condition,
        d1_1.created_at,
        d1_1.dimensions,
        d1_1.image_url,
        d1_1.import_date,
        d1_1.introduction,
        d1_1.price,
        d1_1.quantity,
        d1_1.rush_order_supported,
        d1_1.title,
        d1_1.type,
        d1_1.updated_at,
        d1_1.weight,
        d1_0.directors,
        d1_0.duration_minutes,
        d1_0.dvd_type,
        d1_0.genre,
        d1_0.rating,
        d1_0.release_date,
        d1_0.studio 
    from
        dvd d1_0 
    join
        product d1_1 
            on d1_0.product_id=d1_1.product_id
2025-07-05T12:36:30.449+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        l1_0.product_id,
        l1_1.barcode,
        l1_1.condition,
        l1_1.created_at,
        l1_1.dimensions,
        l1_1.image_url,
        l1_1.import_date,
        l1_1.introduction,
        l1_1.price,
        l1_1.quantity,
        l1_1.rush_order_supported,
        l1_1.title,
        l1_1.type,
        l1_1.updated_at,
        l1_1.weight,
        l1_0.artist,
        l1_0.music_type,
        l1_0.record_label,
        l1_0.release_date,
        l1_0.rpm,
        l1_0.size_inches,
        l1_0.sleeve_condition,
        l1_0.tracklist,
        l1_0.vinyl_condition 
    from
        lp l1_0 
    join
        product l1_1 
            on l1_0.product_id=l1_1.product_id
Hibernate: 
    select
        l1_0.product_id,
        l1_1.barcode,
        l1_1.condition,
        l1_1.created_at,
        l1_1.dimensions,
        l1_1.image_url,
        l1_1.import_date,
        l1_1.introduction,
        l1_1.price,
        l1_1.quantity,
        l1_1.rush_order_supported,
        l1_1.title,
        l1_1.type,
        l1_1.updated_at,
        l1_1.weight,
        l1_0.artist,
        l1_0.music_type,
        l1_0.record_label,
        l1_0.release_date,
        l1_0.rpm,
        l1_0.size_inches,
        l1_0.sleeve_condition,
        l1_0.tracklist,
        l1_0.vinyl_condition 
    from
        lp l1_0 
    join
        product l1_1 
            on l1_0.product_id=l1_1.product_id
2025-07-05T12:36:30.451+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] c.i.e.service.admin.ProductService       : Fetched 11 products with complete data
2025-07-05T12:36:30.452+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-05T12:36:30.453+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 11 products, data=[BookDTO(bookId=1, genre=Documentary,  (truncated)...]
2025-07-05T12:36:30.456+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T12:36:32.568+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : GET "/api/products/2", parameters={}
2025-07-05T12:36:32.569+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getProductById(Long)
2025-07-05T12:36:32.585+07:00  INFO 306257 --- [demo] [nio-8080-exec-3] c.i.e.controller.ProductController       : GET /api/products/2 - Fetching product
2025-07-05T12:36:32.586+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] c.i.e.service.admin.ProductService       : Fetching product by ID with type-specific data: 2
2025-07-05T12:36:32.594+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id 
    where
        b1_0.product_id=?
Hibernate: 
    select
        b1_0.product_id,
        b1_1.barcode,
        b1_1.condition,
        b1_1.created_at,
        b1_1.dimensions,
        b1_1.image_url,
        b1_1.import_date,
        b1_1.introduction,
        b1_1.price,
        b1_1.quantity,
        b1_1.rush_order_supported,
        b1_1.title,
        b1_1.type,
        b1_1.updated_at,
        b1_1.weight,
        b1_0.authors,
        b1_0.cover_type,
        b1_0.genre,
        b1_0.page_count,
        b1_0.publication_date,
        b1_0.publishers 
    from
        book b1_0 
    join
        product b1_1 
            on b1_0.product_id=b1_1.product_id 
    where
        b1_0.product_id=?
2025-07-05T12:36:32.597+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-05T12:36:32.597+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Operation completed successfully, data=BookDTO(bookId=2, genre=Cla (truncated)...]
2025-07-05T12:36:32.598+07:00 DEBUG 306257 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
