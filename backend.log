[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mcom.example:merged-project[0;1m >---------------------[m
[[1;34mINFO[m] [1mBuilding merged-project 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ war ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mmerged-project[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 5 resources from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:compile[m [1m(default-compile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/test/resources to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.13.0:testCompile[m [1m(default-testCompile)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Recompiling the module because of [1mchanged source code[m.
[[1;34mINFO[m] Compiling 10 source files with javac [debug parameters release 21] to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mmerged-project[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.4.4:run[m [1m(default-cli)[m @ [36mmerged-project[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:32:19.742+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:32:19.743+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:32:19.744+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:32:19.797+07:00  INFO 235510 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-05T09:32:19.798+07:00  INFO 235510 --- [demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-05T09:32:20.461+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:32:20.461+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:32:20.536+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 67 ms. Found 12 JPA repository interfaces.
2025-07-05T09:32:21.255+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:32:21.273+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:32:21.273+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:32:21.492+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:32:21.499+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:32:21.500+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1701 ms
2025-07-05T09:32:21.663+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:32:21.697+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.11.Final
2025-07-05T09:32:21.719+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:32:22.021+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:32:22.050+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-05T09:32:22.187+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.sqlite.jdbc4.JDBC4Connection@7181dc0f
2025-07-05T09:32:22.188+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-05T09:32:22.216+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:32:23.121+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:32:23.127+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:32:23.128+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:32:23.129+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:32:23.134+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:32:23.136+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:32:23.258+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:32:23.297+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:32:23.516+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-05T09:32:26.318+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:32:26.336+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:32:26.409+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:32:26.471+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:32:26.495+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:32:26.530+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:32:26.601+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:32:26.637+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:32:26.667+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:32:26.674+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 7.332 seconds (process running for 7.654)
2025-07-05T09:32:27.385+07:00  INFO 235510 --- [demo] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-05T09:32:27.385+07:00  INFO 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-05T09:32:27.385+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected StandardServletMultipartResolver
2025-07-05T09:32:27.385+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected AcceptHeaderLocaleResolver
2025-07-05T09:32:27.385+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected FixedThemeResolver
2025-07-05T09:32:27.386+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@d88e95b
2025-07-05T09:32:27.387+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5602db9e
2025-07-05T09:32:27.387+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-05T09:32:27.387+07:00  INFO 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-07-05T09:32:27.395+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-07-05T09:32:27.404+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-07-05T09:32:27.441+07:00  INFO 235510 --- [demo] [nio-8080-exec-1] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-07-05T09:32:27.445+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] c.i.e.service.admin.ProductService       : Fetching all products
2025-07-05T09:32:27.488+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-07-05T09:32:27.547+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-05T09:32:27.556+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 10 products, data=[ProductDTO(productId=1, title=The Gre (truncated)...]
2025-07-05T09:32:27.581+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T09:32:54.323+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : GET "/api/products", parameters={}
2025-07-05T09:32:54.323+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.ProductController#getAllProducts()
2025-07-05T09:32:54.337+07:00  INFO 235510 --- [demo] [nio-8080-exec-2] c.i.e.controller.ProductController       : GET /api/products - Fetching all products
2025-07-05T09:32:54.338+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] c.i.e.service.admin.ProductService       : Fetching all products
2025-07-05T09:32:54.340+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id
2025-07-05T09:32:54.346+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-05T09:32:54.346+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Retrieved 10 products, data=[ProductDTO(productId=1, title=The Gre (truncated)...]
2025-07-05T09:32:54.350+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T09:32:57.779+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : POST "/api/cart/check-quantities", parameters={}
2025-07-05T09:32:57.781+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.CartController#checkQuantities(CartCheckRequest)
2025-07-05T09:32:57.889+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [CartCheckRequest(items=[CartCheckRequest.CartItem(productId=10, quantity=1)])]
2025-07-05T09:32:57.902+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-07-05T09:32:57.907+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-05T09:32:57.907+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] m.m.a.RequestResponseBodyMethodProcessor : Writing [CartCheckResponse(ok=true, insufficient=[])]
2025-07-05T09:32:57.908+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T09:33:56.226+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : POST "/api/orders", parameters={}
2025-07-05T09:33:56.227+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.OrderController#createOrder(CreateOrderRequest)
2025-07-05T09:33:56.247+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [CreateOrderRequest(cartItems=[CreateOrderRequest.CartItemDTO(productId=10, quantity=1, rushOrder=fal (truncated)...]
2025-07-05T09:33:56.313+07:00  INFO 235510 --- [demo] [nio-8080-exec-4] c.i.e.controller.OrderController         : POST /api/orders - Creating new order with 1 items
2025-07-05T09:33:56.314+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] c.i.e.service.admin.ProductService       : Fetching product by ID: 10
2025-07-05T09:33:56.315+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
2025-07-05T09:33:56.316+07:00  INFO 235510 --- [demo] [nio-8080-exec-4] c.i.e.service.admin.OrderService         : Creating order with 1 items
2025-07-05T09:33:56.348+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        delivery_information
        (address, delivery_fee, delivery_message, delivery_time, district, email, name, phone, province, rush_delivery_instruction, ward) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        delivery_information
        (address, delivery_fee, delivery_message, delivery_time, district, email, name, phone, province, rush_delivery_instruction, ward) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.351+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.368+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (created_at, delivery_id, status, total_after_vat, total_before_vat, updated_at, vat_percentage) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        order_items
        (created_at, delivery_id, status, total_after_vat, total_before_vat, updated_at, vat_percentage) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.369+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.371+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        order_item
        (delivery_time, instructions, order_id, product_id, quantity, rush_order_using, status, total_fee) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        order_item
        (delivery_time, instructions, order_id, product_id, quantity, rush_order_using, status, total_fee) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.371+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.373+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        invoice
        (created_at, description, order_id, paid_at, payment_method, payment_status) 
    values
        (?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        invoice
        (created_at, description, order_id, paid_at, payment_method, payment_status) 
    values
        (?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.373+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.375+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        payment_transaction
        (amount, created_at, failure_reason, invoice_id, payment_method, processed_at, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        payment_transaction
        (amount, created_at, failure_reason, invoice_id, payment_method, processed_at, status) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.375+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.377+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] c.i.e.service.log.AuditLogService        : Logging ORDER operation on Order with ID: 55 by user: null
2025-07-05T09:33:56.378+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:33:56.379+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:33:56.379+07:00  INFO 235510 --- [demo] [nio-8080-exec-4] c.i.e.service.admin.OrderService         : Order created successfully with ID: 55
2025-07-05T09:33:56.392+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] org.hibernate.SQL                        : 
    update
        product 
    set
        barcode=?,
        condition=?,
        created_at=?,
        dimensions=?,
        image_url=?,
        import_date=?,
        introduction=?,
        price=?,
        quantity=?,
        rush_order_supported=?,
        title=?,
        updated_at=?,
        weight=? 
    where
        product_id=?
Hibernate: 
    update
        product 
    set
        barcode=?,
        condition=?,
        created_at=?,
        dimensions=?,
        image_url=?,
        import_date=?,
        introduction=?,
        price=?,
        quantity=?,
        rush_order_supported=?,
        title=?,
        updated_at=?,
        weight=? 
    where
        product_id=?
Saved Order: 55
2025-07-05T09:33:56.411+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-05T09:33:56.417+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [ApiResponse(success=true, message=Order created successfully, data=OrderDTO(orderId=55, totalBeforeV (truncated)...]
2025-07-05T09:33:56.435+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 201 CREATED
2025-07-05T09:33:56.440+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : POST "/api/payment/create", parameters={}
2025-07-05T09:33:56.440+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.PaymentController#createPayment(PaymentRequest, HttpServletRequest)
2025-07-05T09:33:56.446+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] m.m.a.RequestResponseBodyMethodProcessor : Read "application/json;charset=UTF-8" to [com.itss.ecommerce.dto.payment.request.PaymentRequest@66f1fed2]
2025-07-05T09:33:56.456+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-05T09:33:56.456+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Writing [com.itss.ecommerce.dto.payment.response.PaymentResponse@79be8661]
2025-07-05T09:33:56.457+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
2025-07-05T09:34:22.719+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : GET "/api/payment/return?paymentMethod=VNPAY&vnp_Amount=60000000&vnp_BankCode=NCB&vnp_BankTranNo=VNP15056782&vnp_CardType=ATM&vnp_OrderInfo=Thanh+toan+don+hang%3A55&vnp_PayDate=20250705093511&vnp_ResponseCode=00&vnp_TmnCode=WGX5RLER&vnp_TransactionNo=15056782&vnp_TransactionStatus=00&vnp_TxnRef=55&vnp_SecureHash=539e7c911fb7da0fd4b27c333234bf4c1ec243566852ec375e77dccad42aef9d2d11bf16eb5e7cf73e137721078cf299507d98c73b0cdb25f07076dccc80a237", parameters={masked}
2025-07-05T09:34:22.720+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped to com.itss.ecommerce.controller.PaymentController#returnPage(Map, String, HttpServletRequest)
Valid hash: true
2025-07-05T09:34:22.731+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] c.i.e.service.admin.OrderService         : Fetching order by ID: 55
2025-07-05T09:34:22.732+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        o1_0.order_id,
        o1_0.created_at,
        o1_0.delivery_id,
        o1_0.status,
        o1_0.total_after_vat,
        o1_0.total_before_vat,
        o1_0.updated_at,
        o1_0.vat_percentage 
    from
        order_items o1_0 
    where
        o1_0.order_id=?
Hibernate: 
    select
        o1_0.order_id,
        o1_0.created_at,
        o1_0.delivery_id,
        o1_0.status,
        o1_0.total_after_vat,
        o1_0.total_before_vat,
        o1_0.updated_at,
        o1_0.vat_percentage 
    from
        order_items o1_0 
    where
        o1_0.order_id=?
2025-07-05T09:34:22.744+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status 
    from
        invoice i1_0 
    where
        i1_0.order_id=?
2025-07-05T09:34:22.748+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.delivery_time,
        di1_0.district,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.rush_delivery_instruction,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
Hibernate: 
    select
        di1_0.delivery_id,
        di1_0.address,
        di1_0.delivery_fee,
        di1_0.delivery_message,
        di1_0.delivery_time,
        di1_0.district,
        di1_0.email,
        di1_0.name,
        di1_0.phone,
        di1_0.province,
        di1_0.rush_delivery_instruction,
        di1_0.ward 
    from
        delivery_information di1_0 
    where
        di1_0.delivery_id=?
2025-07-05T09:34:22.751+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.order_item_id,
        oi1_0.delivery_time,
        oi1_0.instructions,
        oi1_0.product_id,
        oi1_0.quantity,
        oi1_0.rush_order_using,
        oi1_0.status,
        oi1_0.total_fee 
    from
        order_item oi1_0 
    where
        oi1_0.order_id=?
2025-07-05T09:34:22.754+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
Hibernate: 
    select
        p1_0.product_id,
        p1_0.type,
        p1_0.barcode,
        p1_0.condition,
        p1_0.created_at,
        p1_0.dimensions,
        p1_0.image_url,
        p1_0.import_date,
        p1_0.introduction,
        p1_0.price,
        p1_0.quantity,
        p1_0.rush_order_supported,
        p1_0.title,
        p1_0.updated_at,
        p1_0.weight,
        p1_1.authors,
        p1_1.cover_type,
        p1_1.genre,
        p1_1.page_count,
        p1_1.publication_date,
        p1_1.publishers,
        p1_2.artists,
        p1_2.genre,
        p1_2.record_label,
        p1_2.release_date,
        p1_2.track_list,
        p1_3.directors,
        p1_3.duration_minutes,
        p1_3.dvd_type,
        p1_3.genre,
        p1_3.rating,
        p1_3.release_date,
        p1_3.studio,
        p1_4.artist,
        p1_4.music_type,
        p1_4.record_label,
        p1_4.release_date,
        p1_4.rpm,
        p1_4.size_inches,
        p1_4.sleeve_condition,
        p1_4.tracklist,
        p1_4.vinyl_condition 
    from
        product p1_0 
    left join
        book p1_1 
            on p1_0.product_id=p1_1.product_id 
    left join
        cd p1_2 
            on p1_0.product_id=p1_2.product_id 
    left join
        dvd p1_3 
            on p1_0.product_id=p1_3.product_id 
    left join
        lp p1_4 
            on p1_0.product_id=p1_4.product_id 
    where
        p1_0.product_id=?
DEBUG: Jakarta Mail version 2.1.3
DEBUG: URL jar:file:/home/bxs/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar!/META-INF/javamail.providers
DEBUG: successfully loaded resource: jar:file:/home/bxs/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar!/META-INF/javamail.providers
DEBUG: successfully loaded resource: /META-INF/javamail.default.providers
DEBUG: Tables of loaded providers
DEBUG: Providers Listed By Class Name: {org.eclipse.angus.mail.imap.IMAPStore=jakarta.mail.Provider[STORE,imap,org.eclipse.angus.mail.imap.IMAPStore,Oracle], org.eclipse.angus.mail.smtp.SMTPTransport=jakarta.mail.Provider[TRANSPORT,smtp,org.eclipse.angus.mail.smtp.SMTPTransport,Oracle], org.eclipse.angus.mail.pop3.POP3Store=jakarta.mail.Provider[STORE,pop3,org.eclipse.angus.mail.pop3.POP3Store,Oracle], org.eclipse.angus.mail.pop3.POP3SSLStore=jakarta.mail.Provider[STORE,pop3s,org.eclipse.angus.mail.pop3.POP3SSLStore,Oracle], org.eclipse.angus.mail.smtp.SMTPSSLTransport=jakarta.mail.Provider[TRANSPORT,smtps,org.eclipse.angus.mail.smtp.SMTPSSLTransport,Oracle], org.eclipse.angus.mail.imap.IMAPSSLStore=jakarta.mail.Provider[STORE,imaps,org.eclipse.angus.mail.imap.IMAPSSLStore,Oracle]}
DEBUG: Providers Listed By Protocol: {imap=jakarta.mail.Provider[STORE,imap,org.eclipse.angus.mail.imap.IMAPStore,Oracle], smtp=jakarta.mail.Provider[TRANSPORT,smtp,org.eclipse.angus.mail.smtp.SMTPTransport,Oracle], pop3=jakarta.mail.Provider[STORE,pop3,org.eclipse.angus.mail.pop3.POP3Store,Oracle], imaps=jakarta.mail.Provider[STORE,imaps,org.eclipse.angus.mail.imap.IMAPSSLStore,Oracle], smtps=jakarta.mail.Provider[TRANSPORT,smtps,org.eclipse.angus.mail.smtp.SMTPSSLTransport,Oracle], pop3s=jakarta.mail.Provider[STORE,pop3s,org.eclipse.angus.mail.pop3.POP3SSLStore,Oracle]}
DEBUG: successfully loaded resource: /META-INF/javamail.default.address.map
DEBUG: URL jar:file:/home/bxs/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar!/META-INF/javamail.address.map
DEBUG: successfully loaded resource: jar:file:/home/bxs/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar!/META-INF/javamail.address.map
DEBUG: getProvider() returning jakarta.mail.Provider[TRANSPORT,smtp,org.eclipse.angus.mail.smtp.SMTPTransport,Oracle]
DEBUG SMTP: useEhlo true, useAuth true
DEBUG SMTP: trying to connect to host "smtp.gmail.com", port 587, isSSL false
220 smtp.gmail.com ESMTP d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
DEBUG SMTP: connected to host "smtp.gmail.com", port: 587
EHLO bxs
250-smtp.gmail.com at your service, [222.254.16.79]
250-SIZE 36700160
250-8BITMIME
250-STARTTLS
250-ENHANCEDSTATUSCODES
250-PIPELINING
250-CHUNKING
250 SMTPUTF8
DEBUG SMTP: Found extension "SIZE", arg "36700160"
DEBUG SMTP: Found extension "8BITMIME", arg ""
DEBUG SMTP: Found extension "STARTTLS", arg ""
DEBUG SMTP: Found extension "ENHANCEDSTATUSCODES", arg ""
DEBUG SMTP: Found extension "PIPELINING", arg ""
DEBUG SMTP: Found extension "CHUNKING", arg ""
DEBUG SMTP: Found extension "SMTPUTF8", arg ""
STARTTLS
220 2.0.0 Ready to start TLS
EHLO bxs
250-smtp.gmail.com at your service, [222.254.16.79]
250-SIZE 36700160
250-8BITMIME
250-AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH
250-ENHANCEDSTATUSCODES
250-PIPELINING
250-CHUNKING
250 SMTPUTF8
DEBUG SMTP: Found extension "SIZE", arg "36700160"
DEBUG SMTP: Found extension "8BITMIME", arg ""
DEBUG SMTP: Found extension "AUTH", arg "LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH"
DEBUG SMTP: Found extension "ENHANCEDSTATUSCODES", arg ""
DEBUG SMTP: Found extension "PIPELINING", arg ""
DEBUG SMTP: Found extension "CHUNKING", arg ""
DEBUG SMTP: Found extension "SMTPUTF8", arg ""
DEBUG SMTP: protocolConnect login, host=smtp.gmail.com, user=bxson1412@gmail.com, password=<non-null>
DEBUG SMTP: Attempt to authenticate using mechanisms: LOGIN PLAIN DIGEST-MD5 NTLM XOAUTH2 
DEBUG SMTP: Using mechanism LOGIN
DEBUG SMTP: AUTH LOGIN command trace suppressed
DEBUG SMTP: AUTH LOGIN succeeded
DEBUG SMTP: use8bit false
MAIL FROM:<bxs@bxs>
250 2.1.0 OK d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
RCPT TO:<bxson0301@gmail.com>
250 2.1.5 OK d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
DEBUG SMTP: Verified Addresses
DEBUG SMTP:   bxson0301@gmail.com
DATA
354 Go ahead d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
Date: Sat, 5 Jul 2025 09:34:24 +0700 (ICT)
To: bxson0301@gmail.com
Message-ID: <1490452525.0.1751682865009@bxs>
Subject: Payment Confirmation & Invoice - Order #55
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Dear bui xuan son,

Thank you for your payment! Here is your invoice:

INVOICE
=3D=3D=3D=3D=3D=3D=3D
Order ID: 55
Date: 2025-07-05T09:33:56.362
Payment Status: PAID

BILLING INFORMATION:
Name: bui xuan son
Email: bxson0301@gmail.com
Phone: 0123456789
Address: S=E1=BB=91 9 - =C4=90=C6=B0=E1=BB=9Dng A

ITEMS PURCHASED:
----------------------------------------------------------------
Item=09=09=09Qty=09Unit Price=09Total
----------------------------------------------------------------
Hai Dang's Book=091=09$500000=09=09$500000
----------------------------------------------------------------
Subtotal: $500000
VAT: $50000
TOTAL: $550000

Your order will be processed and shipped within 2-3 business days.
You will receive a tracking number once your order is shipped.

Thank you for your business!
Best regards,
ITSS E-commerce Team
.
250 2.0.0 OK  1751682866 d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
DEBUG SMTP: message successfully delivered to mail server
QUIT
221 2.0.0 closing connection d9443c01a7336-23c8431a194sm31144415ad.34 - gsmtp
Email sent successfully to: bxson0301@gmail.com
2025-07-05T09:34:26.814+07:00  INFO 235510 --- [demo] [nio-8080-exec-6] c.i.e.controller.PaymentController       : Payment successful for order ID: 55
2025-07-05T09:34:26.816+07:00  INFO 235510 --- [demo] [nio-8080-exec-6] c.itss.ecommerce.service.InvoiceService  : Updating invoice status for order ID: 55 to PAID
2025-07-05T09:34:26.882+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status 
    from
        invoice i1_0 
    left join
        order_items o1_0 
            on o1_0.order_id=i1_0.order_id 
    where
        o1_0.order_id=?
Hibernate: 
    select
        i1_0.invoice_id,
        i1_0.created_at,
        i1_0.description,
        i1_0.order_id,
        i1_0.paid_at,
        i1_0.payment_method,
        i1_0.payment_status 
    from
        invoice i1_0 
    left join
        order_items o1_0 
            on o1_0.order_id=i1_0.order_id 
    where
        o1_0.order_id=?
2025-07-05T09:34:26.887+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] c.i.e.service.log.AuditLogService        : Logging UPDATE operation on Invoice with ID: 53 by user: null
2025-07-05T09:34:26.888+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        audit_log
        (action_name, action_type, entity_id, entity_type, note, recorded_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-07-05T09:34:26.889+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        last_insert_rowid()
Hibernate: 
    select
        last_insert_rowid()
2025-07-05T09:34:26.889+07:00  INFO 235510 --- [demo] [nio-8080-exec-6] c.itss.ecommerce.service.InvoiceService  : Invoice status updated successfully for order ID: 55
2025-07-05T09:34:26.891+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        invoice 
    set
        created_at=?,
        description=?,
        order_id=?,
        paid_at=?,
        payment_method=?,
        payment_status=? 
    where
        invoice_id=?
Hibernate: 
    update
        invoice 
    set
        created_at=?,
        description=?,
        order_id=?,
        paid_at=?,
        payment_method=?,
        payment_status=? 
    where
        invoice_id=?
2025-07-05T09:34:26.896+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] c.i.e.service.PaymentTransactionService  : Finding pending payment transactions for invoice ID: 53
2025-07-05T09:34:26.899+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        pt1_0.transaction_id,
        pt1_0.amount,
        pt1_0.created_at,
        pt1_0.failure_reason,
        pt1_0.invoice_id,
        pt1_0.payment_method,
        pt1_0.processed_at,
        pt1_0.status 
    from
        payment_transaction pt1_0 
    left join
        invoice i1_0 
            on i1_0.invoice_id=pt1_0.invoice_id 
    where
        i1_0.invoice_id=? 
        and pt1_0.status=?
Hibernate: 
    select
        pt1_0.transaction_id,
        pt1_0.amount,
        pt1_0.created_at,
        pt1_0.failure_reason,
        pt1_0.invoice_id,
        pt1_0.payment_method,
        pt1_0.processed_at,
        pt1_0.status 
    from
        payment_transaction pt1_0 
    left join
        invoice i1_0 
            on i1_0.invoice_id=pt1_0.invoice_id 
    where
        i1_0.invoice_id=? 
        and pt1_0.status=?
SLF4J(E): Failed toString() invocation on an object of type [com.itss.ecommerce.entity.PaymentTransaction]
SLF4J(E): Reported exception:
java.lang.StackOverflowError
	at com.itss.ecommerce.entity.DeliveryInformation.toString(DeliveryInformation.java:10)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor.intercept(ByteBuddyInterceptor.java:55)
	at org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:102)
	at com.itss.ecommerce.entity.DeliveryInformation$HibernateProxy$lIPhc9Pd.toString(Unknown Source)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.OrderItem.toString(OrderItem.java:10)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at java.base/java.util.AbstractCollection.toString(AbstractCollection.java:459)
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:588)
	at java.base/java.lang.String.valueOf(String.java:4465)
	at com.itss.ecommerce.entity.Order.toString(Order.java:14)
2025-07-05T09:34:26.900+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] c.i.e.service.PaymentTransactionService  : Pending transaction found: [FAILED toString()]
2025-07-05T09:34:26.926+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] c.i.e.service.PaymentTransactionService  : Updating payment transaction status: 37 to SUCCESS
2025-07-05T09:34:26.927+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        payment_transaction 
    set
        amount=?,
        created_at=?,
        failure_reason=?,
        invoice_id=?,
        payment_method=?,
        processed_at=?,
        status=? 
    where
        transaction_id=?
Hibernate: 
    update
        payment_transaction 
    set
        amount=?,
        created_at=?,
        failure_reason=?,
        invoice_id=?,
        payment_method=?,
        processed_at=?,
        status=? 
    where
        transaction_id=?
2025-07-05T09:34:26.954+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] o.s.web.servlet.view.RedirectView        : View [RedirectView], model {}
2025-07-05T09:34:26.956+07:00 DEBUG 235510 --- [demo] [nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed 302 FOUND
2025-07-05T09:35:14.787+07:00  INFO 235510 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-05T09:35:14.798+07:00  INFO 235510 --- [demo] [       Thread-5] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-05T09:35:14.807+07:00  INFO 235510 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-05T09:35:14.821+07:00  INFO 235510 --- [demo] [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:14.826+07:00  INFO 235510 --- [demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-05T09:35:14.829+07:00  INFO 235510 --- [demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:35:14.972+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:35:14.973+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:35:14.973+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:35:15.179+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:35:15.179+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:35:15.202+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 12 JPA repository interfaces.
2025-07-05T09:35:15.386+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:35:15.387+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:35:15.387+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:35:15.585+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:35:15.590+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:35:15.590+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 614 ms
2025-07-05T09:35:15.646+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:35:15.649+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:35:15.662+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:35:15.664+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-07-05T09:35:15.664+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.sqlite.jdbc4.JDBC4Connection@59cbb58b
2025-07-05T09:35:15.665+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-07-05T09:35:15.665+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:35:16.093+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:35:16.096+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:16.097+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:16.099+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:16.100+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:16.101+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:16.127+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:35:16.136+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:16.590+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:35:16.597+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:35:16.625+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:35:16.652+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:35:16.660+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:35:16.666+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:35:16.689+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:35:16.710+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:35:16.724+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:35:16.728+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 1.796 seconds (process running for 177.708)
2025-07-05T09:35:16.730+07:00  INFO 235510 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-05T09:35:18.136+07:00  INFO 235510 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-05T09:35:18.140+07:00  INFO 235510 --- [demo] [       Thread-7] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-05T09:35:18.143+07:00  INFO 235510 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-05T09:35:18.153+07:00  INFO 235510 --- [demo] [       Thread-7] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:18.155+07:00  INFO 235510 --- [demo] [       Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2025-07-05T09:35:18.159+07:00  INFO 235510 --- [demo] [       Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:35:18.291+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:35:18.291+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:35:18.291+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:35:18.386+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:35:18.386+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:35:18.404+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 12 JPA repository interfaces.
2025-07-05T09:35:18.541+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:35:18.542+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:35:18.543+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:35:18.604+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:35:18.606+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:35:18.606+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 314 ms
2025-07-05T09:35:18.643+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:35:18.645+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:35:18.651+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:35:18.653+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2025-07-05T09:35:18.654+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.sqlite.jdbc4.JDBC4Connection@575b883b
2025-07-05T09:35:18.654+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2025-07-05T09:35:18.655+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:35:19.032+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:35:19.034+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:19.035+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:19.036+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:19.037+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:19.037+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:19.056+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:35:19.068+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:19.447+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:35:19.452+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:35:19.480+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:35:19.507+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:35:19.514+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:35:19.525+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:35:19.549+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:35:19.562+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:35:19.571+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:35:19.576+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 1.306 seconds (process running for 180.556)
2025-07-05T09:35:19.578+07:00  INFO 235510 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-05T09:35:20.988+07:00  INFO 235510 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-05T09:35:20.992+07:00  INFO 235510 --- [demo] [      Thread-11] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-05T09:35:20.996+07:00  INFO 235510 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-05T09:35:21.007+07:00  INFO 235510 --- [demo] [      Thread-11] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:21.009+07:00  INFO 235510 --- [demo] [      Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2025-07-05T09:35:21.012+07:00  INFO 235510 --- [demo] [      Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:35:21.121+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:35:21.122+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:35:21.122+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:35:21.214+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:35:21.214+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:35:21.229+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 12 JPA repository interfaces.
2025-07-05T09:35:21.352+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:35:21.353+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:35:21.353+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:35:21.452+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:35:21.454+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:35:21.455+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 332 ms
2025-07-05T09:35:21.514+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:35:21.517+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:35:21.525+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:35:21.527+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2025-07-05T09:35:21.528+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.sqlite.jdbc4.JDBC4Connection@73457e96
2025-07-05T09:35:21.529+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2025-07-05T09:35:21.529+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:35:21.813+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:35:21.815+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:21.815+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:21.816+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:21.816+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:21.817+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:21.828+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:35:21.835+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:22.161+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:35:22.167+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:35:22.192+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:35:22.228+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:35:22.235+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:35:22.241+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:35:22.256+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:35:22.264+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:35:22.273+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:35:22.276+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 1.174 seconds (process running for 183.256)
2025-07-05T09:35:22.277+07:00  INFO 235510 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-05T09:35:26.732+07:00  INFO 235510 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-05T09:35:26.737+07:00  INFO 235510 --- [demo] [      Thread-15] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-05T09:35:26.740+07:00  INFO 235510 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-05T09:35:26.750+07:00  INFO 235510 --- [demo] [      Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:26.753+07:00  INFO 235510 --- [demo] [      Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2025-07-05T09:35:26.756+07:00  INFO 235510 --- [demo] [      Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:35:26.868+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:35:26.868+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:35:26.868+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:35:26.971+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:35:26.971+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:35:26.990+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 12 JPA repository interfaces.
2025-07-05T09:35:27.120+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:35:27.120+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:35:27.120+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:35:27.183+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:35:27.185+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:35:27.185+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 316 ms
2025-07-05T09:35:27.222+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:35:27.224+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:35:27.232+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:35:27.233+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2025-07-05T09:35:27.234+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.sqlite.jdbc4.JDBC4Connection@35a6cdd8
2025-07-05T09:35:27.234+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2025-07-05T09:35:27.235+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-5)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:35:27.474+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:35:27.475+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:27.476+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:27.476+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:27.477+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:27.477+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:27.488+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:35:27.494+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:27.801+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:35:27.806+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:35:27.825+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:35:27.849+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:35:27.855+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:35:27.861+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:35:27.876+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:35:27.883+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:35:27.891+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:35:27.896+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 1.052 seconds (process running for 188.876)
2025-07-05T09:35:27.898+07:00  INFO 235510 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-05T09:35:29.326+07:00  INFO 235510 --- [demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-05T09:35:29.330+07:00  INFO 235510 --- [demo] [      Thread-19] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-05T09:35:29.332+07:00  INFO 235510 --- [demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-05T09:35:29.339+07:00  INFO 235510 --- [demo] [      Thread-19] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:29.340+07:00  INFO 235510 --- [demo] [      Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2025-07-05T09:35:29.343+07:00  INFO 235510 --- [demo] [      Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-07-05T09:35:29.501+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Starting EcommerceApplication using Java 21.0.6 with PID 235510 (/home/bxs/Downloads/AIMSspringboot-react/target/classes started by bxs in /home/bxs/Downloads/AIMSspringboot-react)
2025-07-05T09:35:29.501+07:00 DEBUG 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Running with Spring Boot v3.4.4, Spring v6.2.5
2025-07-05T09:35:29.501+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : No active profile set, falling back to 1 default profile: "default"
2025-07-05T09:35:29.606+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-05T09:35:29.606+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-05T09:35:29.625+07:00  INFO 235510 --- [demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 12 JPA repository interfaces.
2025-07-05T09:35:29.739+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-07-05T09:35:29.740+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-05T09:35:29.740+07:00  INFO 235510 --- [demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-07-05T09:35:29.794+07:00  INFO 235510 --- [demo] [  restartedMain] org.apache.jasper.servlet.TldScanner     : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-07-05T09:35:29.796+07:00  INFO 235510 --- [demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-05T09:35:29.796+07:00  INFO 235510 --- [demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 293 ms
2025-07-05T09:35:29.838+07:00  INFO 235510 --- [demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-05T09:35:29.841+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-05T09:35:29.848+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-05T09:35:29.850+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2025-07-05T09:35:29.850+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection org.sqlite.jdbc4.JDBC4Connection@51b36983
2025-07-05T09:35:29.850+07:00  INFO 235510 --- [demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2025-07-05T09:35:29.851+07:00  INFO 235510 --- [demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-6)']
	Database driver: undefined/unknown
	Database version: 3.47.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-05T09:35:30.218+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
Hibernate: 
    create table HT_product(product_id bigint not null, hib_sess_id char(36) not null, primary key (product_id, hib_sess_id))
2025-07-05T09:35:30.220+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_product(duration_minutes integer, page_count integer, price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), dvd_type varchar(50), genre varchar(100), genre varchar(100), genre varchar(100), publishers varchar(200), record_label varchar(200), studio varchar(200), artists varchar(500), authors varchar(500), directors varchar(500), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), publication_date varchar(255), record_label varchar(255), release_date varchar(255), release_date varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), track_list TEXT, tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:30.224+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_dvd(duration_minutes integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, rating varchar(10), type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), dvd_type varchar(50), genre varchar(100), studio varchar(200), directors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:30.224+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_book(page_count integer, price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), cover_type varchar(50), genre varchar(100), publishers varchar(200), authors varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, publication_date varchar(255), title varchar(255), type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:30.226+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_lp(price integer, quantity integer, rpm integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, size_inches float, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), image_url varchar(500), artist varchar(255), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, music_type varchar(255), record_label varchar(255), release_date varchar(255), sleeve_condition varchar(255), title varchar(255), tracklist TEXT, type varchar(255), vinyl_condition varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:30.226+07:00 DEBUG 235510 --- [demo] [  restartedMain] org.hibernate.SQL                        : 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
Hibernate: 
    create table HTE_cd(price integer, quantity integer, rush_order_supported boolean, weight float, HTE_IDENTITY integer, created_at timestamp, product_id bigint, updated_at timestamp, type varchar(31) not null, hib_sess_id char(36) not null, barcode varchar(50), genre varchar(100), record_label varchar(200), artists varchar(500), image_url varchar(500), condition varchar(255), dimensions varchar(255), import_date varchar(255), introduction TEXT, release_date varchar(255), title varchar(255), track_list TEXT, type varchar(255), primary key (HTE_IDENTITY, hib_sess_id))
2025-07-05T09:35:30.250+07:00  INFO 235510 --- [demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-05T09:35:30.259+07:00  INFO 235510 --- [demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-05T09:35:30.624+07:00  WARN 235510 --- [demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-05T09:35:30.629+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-07-05T09:35:30.647+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : 82 mappings in 'requestMappingHandlerMapping'
2025-07-05T09:35:30.672+07:00 DEBUG 235510 --- [demo] [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-05T09:35:30.678+07:00 DEBUG 235510 --- [demo] [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-05T09:35:30.684+07:00 DEBUG 235510 --- [demo] [  restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-05T09:35:30.698+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:sqlite:./data/ITSS_demo2.db'
2025-07-05T09:35:30.705+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-05T09:35:30.713+07:00  INFO 235510 --- [demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-07-05T09:35:30.717+07:00  INFO 235510 --- [demo] [  restartedMain] c.itss.ecommerce.EcommerceApplication    : Started EcommerceApplication in 1.234 seconds (process running for 191.697)
2025-07-05T09:35:30.718+07:00  INFO 235510 --- [demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
